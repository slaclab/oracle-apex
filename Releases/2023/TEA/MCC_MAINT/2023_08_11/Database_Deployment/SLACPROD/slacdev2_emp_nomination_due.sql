
  CREATE TABLE "MCC_MAINT"."EMP_NOMINATION_DUE" 
   (	"DUE_DATE" DATE, 
	"ID" NUMBER(*,0) NOT NULL ENABLE, 
	 PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "MCC_MAINT_DATA"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "MCC_MAINT_DATA" ;

  CREATE OR REPLACE EDITIONABLE TRIGGER "MCC_MAINT"."EMP_NOMINATION_DUE_AIUDR" 
    AFTER INSERT OR UPDATE OR DELETE ON EMP_NOMINATION_DUE
    FOR EACH ROW
DECLARE
    JN_OPERATION VARCHAR2(3);
BEGIN
    IF INSERTING THEN
        JN_OPERATION := 'INS';
    ELSIF UPDATING THEN
        JN_OPERATION := 'UPD';
    ELSIF DELETING THEN
        JN_OPERATION := 'DEL';
    END IF;
    IF INSERTING OR UPDATING THEN
        INSERT INTO EMP_NOMINATION_DUE_JN 
        ( JN_OPERATION, JN_ORACLE_USER, JN_DATETIME, JN_NOTES, JN_APPLN, JN_SESSION
         , DUE_DATE, ID
         ) VALUES (jn_operation, NVL(V('APP_USER'),USER), SYSDATE, NULL, NULL, userenv('sessionid')
         , :NEW.DUE_DATE, :NEW.ID
         );
     END IF;
     IF DELETING THEN
         INSERT INTO EMP_NOMINATION_DUE_JN 
         ( JN_OPERATION, JN_ORACLE_USER, JN_DATETIME, JN_NOTES, JN_APPLN, JN_SESSION
         , DUE_DATE, ID
         ) VALUES (jn_operation, NVL(V('APP_USER'),USER), SYSDATE, NULL, NULL,userenv('sessionid')
         , :OLD.DUE_DATE, :OLD.ID );
         END IF; 
END;

/
ALTER TRIGGER "MCC_MAINT"."EMP_NOMINATION_DUE_AIUDR" ENABLE;

