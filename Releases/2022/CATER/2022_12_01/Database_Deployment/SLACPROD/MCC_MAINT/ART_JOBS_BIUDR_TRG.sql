CREATE OR REPLACE TRIGGER MCC_MAINT.ART_JOBS_BIUDR_TRG
BEFORE INSERT OR UPDATE OR DELETE ON MCC_MAINT.ART_JOBS FOR EACH ROW
DECLARE

--  PRAGMA AUTONOMOUS_TRANSACTION;

  v_proc                       varchar2(30);
  V_ERRMSG                     VARCHAR2(500) := NULL;
  V_USER                       VARCHAR2(100) := NVL(V('APP_USER'),USER);

  V_HTML_FLAG                  VARCHAR2(1);
  V_PERMIT_DELETE              VARCHAR2(1);
  jn_operation                 VARCHAR2(3);

  -- INITIALIZES ARRAY PKG.TRG_ART_JOBS_REQUEST_ID_ARR
  TRG_JOBS_REQUEST_ID_ARR_CNT  PLS_INTEGER := PKG.TRG_JOBS_REQUEST_ID_ARR.COUNT;

  PK_CHG_ERROR                 EXCEPTION;
  DEL_ERROR                    EXCEPTION;

  PRINTHEADER BOOLEAN := FALSE;
  PRINTTITLE  VARCHAR2(100);
  ONLYCHANGED BOOLEAN := FALSE;
  TEMPLATE    VARCHAR2(10) := 'PLAIN';

BEGIN
  v_proc := 'ART_JOBS_BIUDR_TRG';

  SELECT DECODE(V('APP_USER'),NULL,'N','Y')
    INTO V_HTML_FLAG
    FROM DUAL;

  --------------------------------------

  IF INSERTING THEN

    IF ( :new.JOB_ID IS NULL ) THEN
      SELECT ART_JOBS_SEQ.NEXTVAL
        INTO :new.JOB_ID
        FROM DUAL;
    END IF;

    IF ( :new.CREATED_BY IS NULL ) THEN
      :new.CREATED_BY := V_USER;
    END IF;

    IF ( :new.CREATED_DATE IS NULL ) THEN
      :new.CREATED_DATE := SYSDATE;
    END IF;

    :new.MODIFIED_BY := NULL;
    :new.MODIFIED_DATE := NULL;

    ----------------------

    -- CAPTURE CURRENT REQUEST_ID FOR PROBLEM STATUS PROCESSING IN THE AFTER INSERT OR UPDATE STATEMENT TRIGGER
    IF ( :new.PROB_ID IS NOT NULL ) THEN
      PKG.TRG_JOBS_REQUEST_ID_ARR(TRG_JOBS_REQUEST_ID_ARR_CNT + 1) := :new.PROB_ID;
    END IF;


    ----------------------

  ELSIF UPDATING THEN

    IF (:new.PROB_ID IS NOT NULL AND :new.PROB_ID <> :old.PROB_ID ) THEN
      V_ERRMSG := 'ERROR: '||V_PROC||': ATTEMPTING TO CHANGE PRIMARY KEY '||TO_CHAR(:old.PROB_ID)||' DURING UPDATE OF ART_JOBS.';
      V_ERRMSG := PKG.FORMAT_MSG(V_ERRMSG, V_HTML_FLAG);
      RAISE PK_CHG_ERROR;
    END IF;

    :new.MODIFIED_BY := V_USER;
    :new.MODIFIED_DATE := SYSDATE;

    --sean test code 11/13/2013

    if :new.job_type_chk = 'HARDWARE'
    and :new.task_person_id <> :old.task_person_id  -- task person changes
      then
        if nvl(:old.am_approval_chk,'test') = 'test'
        then
          null;
        else
        --since apex process forces new to NULL, we will just reverse it.
          :new.am_approval_chk := :old.am_approval_chk;
        end if;
    end if;


-- Poonam 10/2/2022 - Cater #159232 - CD Approval set to "N" if Start/End Date of Software Job changes

    if :new.job_type_chk = 'SOFTWARE'
    and (:new.start_time != :old.start_time or
         :new.latest_date != :old.latest_date)
    then
       if (:new.am_approval_chk = 'Y') 
       then
         :new.am_approval_chk := 'N';
	 :new.area_mgr_review_date := sysdate;
       end if;
    end if;
    ----------------------

    -- CAPTURE CURRENT REQUEST_ID FOR PROBLEM STATUS PROCESSING IN THE AFTER INSERT OR UPDATE STATEMENT TRIGGER
    IF ( :new.PROB_ID IS NOT NULL ) THEN
      PKG.TRG_JOBS_REQUEST_ID_ARR(TRG_JOBS_REQUEST_ID_ARR_CNT + 1) := :new.PROB_ID;
    END IF;

    ----------------------

  END IF;  -- IF INSERTING THEN

  BEGIN

    IF NVL(:NEW.CREATED_BY,:OLD.CREATED_BY) != 'STATUS_CHECK' THEN
    IF INSERTING THEN
       jn_operation := 'INS';
    ELSIF UPDATING THEN
       jn_operation := 'UPD';
    ELSIF DELETING THEN
       jn_operation := 'DEL';
    END IF;

    IF INSERTING OR UPDATING THEN
       INSERT INTO ART_JOBS_JN
       ( JN_OPERATION, JN_ORACLE_USER, JN_DATETIME, JN_NOTES, JN_APPLN, JN_SESSION
       , JOB_ID, AREA_ID, SUBSYSTEM_ID
       , PRIORITY_ID, ACCESS_REQ_ID, PPSZONE_ID, WORK_TYPE_ID
       , PROB_ID, SHOP_ALT_ID, DIV_CODE_ID, SHOP_MAIN_ID
       , BLDGMGR_ID, ASST_BLDGMGR_ID, BUILDING_ID, UPDATEDBY_ID
       , CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE
       , STATUS_CHK, DESCRIPTION, CATER_NUMBER, JOB_HISTORY
       , MICRO, PRIMARY, AGE, REVIEW_COUNT
       , WORK_TITLE_HISTORY, LATEST_DATE, REVIEW_DATE, EOIC_PAGE
       , REVIEW_DATE_HISTORY, WORK_DESCRIPTION_HISTORY, DISPLAY_ORDER, STATUS_CHANGE_HISTORY
       , ONGOING_CHK, LOCK_AND_TAG_CHK, ATMOSPHERIC_SAFETY_WCF_CHK, ELEC_SYS_WORK_CTL_FORM_CHK
       , RADIATION_WORK_PERMIT_CHK, RADIATION_SAFETY_WCF_CHK, RADIATION_REMOVAL_SURVEY_CHK, UNIT
       , SAFETY_ISSUE_CHK, AM_APPROVAL_CHK, START_TIME, ADSO
       , MINIMUM_HOURS, TOCO_TIME, TOTAL_TIME, ISSUES
       , NUMBER_OF_PERSONS, PERSON_HOURS, MICRO_OTHER, RPFO_SURVEY_CHK
       , JOB_STATUS_CHK, JOB_NUMBER, JOB_UPDATED_DATE, JOB_COUNT
       , JOB_PRIORITY_FLAGS, EVENT_NUMBER, CHANNEL, NAME
       , DEVICE_COMMON_NAME, COMMENTS, SEARCH_CRITERIA, CHECKBOX_DATE_FLAGGED
       , ATTACHMENT_HISTORY, FEEDBACK_COMMENTS, FEEDBACK_PRIORITY_CHK, AM_APPROVAL_HISTORY
       , DATE_COMPLETED, HOP_CHK, OLD_CREATED_BY, OLD_MODIFIED_BY
       , ACCESS_REQUIREMENTS_CHK, TASK_PERSON_ID, AREA_MGR_ID, area_mgr_review_date, area_mgr_review_comments
       , SEQUENCE, TODAY_CHK, today_modified_date, REQUIRES_BEAM_CHK, INVASIVE_CHK
       , TEST_TIME_NEEDED, INVASIVE_COMMENT, BEAM_COMMENT, TEST_PLAN
       , BACKOUT_PLAN, SYSTEMS_AFFECTED, DEPENDENCIES, GROUP_ID
       , SYSTEMS_REQUIRED, EMAIL_CHK, RISK_BENEFIT_DESCR, JOB_TYPE_CHK
       , PPS_INT_HAZ_CHK, SAFETY_FORM_DESCR, VISUAL_NUMBER, TASK_MANAGER
       ) VALUES (jn_operation, NVL(V('APP_USER'),USER), SYSDATE, NULL, NULL,
userenv('sessionid')
       , :NEW.JOB_ID, :NEW.AREA_ID, :NEW.SUBSYSTEM_ID
       , :NEW.PRIORITY_ID, :NEW.ACCESS_REQ_ID, :NEW.PPSZONE_ID, :NEW.WORK_TYPE_ID
       , :NEW.PROB_ID, :NEW.SHOP_ALT_ID, :NEW.DIV_CODE_ID, :NEW.SHOP_MAIN_ID
       , :NEW.BLDGMGR_ID, :NEW.ASST_BLDGMGR_ID, :NEW.BUILDING_ID, :NEW.UPDATEDBY_ID
       , :NEW.CREATED_BY, :NEW.CREATED_DATE, :NEW.MODIFIED_BY, :NEW.MODIFIED_DATE
       , :NEW.STATUS_CHK, :NEW.DESCRIPTION, :NEW.CATER_NUMBER, :NEW.JOB_HISTORY
       , :NEW.MICRO, :NEW.PRIMARY, :NEW.AGE, :NEW.REVIEW_COUNT
       , :NEW.WORK_TITLE_HISTORY, :NEW.LATEST_DATE, :NEW.REVIEW_DATE, :NEW.EOIC_PAGE
       , :NEW.REVIEW_DATE_HISTORY, :NEW.WORK_DESCRIPTION_HISTORY, :NEW.DISPLAY_ORDER, :NEW.STATUS_CHANGE_HISTORY
       , :NEW.ONGOING_CHK, :NEW.LOCK_AND_TAG_CHK, :NEW.ATMOSPHERIC_SAFETY_WCF_CHK, :NEW.ELEC_SYS_WORK_CTL_FORM_CHK
       , :NEW.RADIATION_WORK_PERMIT_CHK, :NEW.RADIATION_SAFETY_WCF_CHK, :NEW.RADIATION_REMOVAL_SURVEY_CHK, :NEW.UNIT
       , :NEW.SAFETY_ISSUE_CHK, :NEW.AM_APPROVAL_CHK, :NEW.START_TIME, :NEW.ADSO
       , :NEW.MINIMUM_HOURS, :NEW.TOCO_TIME, :NEW.TOTAL_TIME, :NEW.ISSUES
       , :NEW.NUMBER_OF_PERSONS, :NEW.PERSON_HOURS, :NEW.MICRO_OTHER, :NEW.RPFO_SURVEY_CHK
       , :NEW.JOB_STATUS_CHK, :NEW.JOB_NUMBER, :NEW.JOB_UPDATED_DATE, :NEW.JOB_COUNT
       , :NEW.JOB_PRIORITY_FLAGS, :NEW.EVENT_NUMBER, :NEW.CHANNEL, :NEW.NAME
       , :NEW.DEVICE_COMMON_NAME, :NEW.COMMENTS, :NEW.SEARCH_CRITERIA, :NEW.CHECKBOX_DATE_FLAGGED
       , :NEW.ATTACHMENT_HISTORY, :NEW.FEEDBACK_COMMENTS, :NEW.FEEDBACK_PRIORITY_CHK, :NEW.AM_APPROVAL_HISTORY
       , :NEW.DATE_COMPLETED, :NEW.HOP_CHK, :NEW.OLD_CREATED_BY, :NEW.OLD_MODIFIED_BY
       , :NEW.ACCESS_REQUIREMENTS_CHK, :NEW.TASK_PERSON_ID, :NEW.AREA_MGR_ID, :new.area_mgr_review_date, :new.area_mgr_review_comments
       , :NEW.SEQUENCE, :NEW.TODAY_CHK, :new.MODIFIED_DATE, :NEW.REQUIRES_BEAM_CHK, :NEW.INVASIVE_CHK
       , :NEW.TEST_TIME_NEEDED, :NEW.INVASIVE_COMMENT, :NEW.BEAM_COMMENT, :NEW.TEST_PLAN
       , :NEW.BACKOUT_PLAN, :NEW.SYSTEMS_AFFECTED, :NEW.DEPENDENCIES, :NEW.GROUP_ID
       , :NEW.SYSTEMS_REQUIRED, :NEW.EMAIL_CHK, :NEW.RISK_BENEFIT_DESCR, :NEW.JOB_TYPE_CHK
       , :NEW.PPS_INT_HAZ_CHK, :NEW.SAFETY_FORM_DESCR, :NEW.VISUAL_NUMBER, :NEW.TASK_MANAGER
        );
    END IF;
    IF DELETING THEN

       INSERT INTO ART_JOBS_JN
       ( JN_OPERATION, JN_ORACLE_USER, JN_DATETIME, JN_NOTES, JN_APPLN, JN_SESSION
       , JOB_ID, AREA_ID, SUBSYSTEM_ID
       , PRIORITY_ID, ACCESS_REQ_ID, PPSZONE_ID, WORK_TYPE_ID
       , PROB_ID, SHOP_ALT_ID, DIV_CODE_ID, SHOP_MAIN_ID
       , BLDGMGR_ID, ASST_BLDGMGR_ID, BUILDING_ID, UPDATEDBY_ID
       , CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE
       , STATUS_CHK, DESCRIPTION, CATER_NUMBER, JOB_HISTORY
       , MICRO, PRIMARY, AGE, REVIEW_COUNT
       , WORK_TITLE_HISTORY, LATEST_DATE, REVIEW_DATE, EOIC_PAGE
       , REVIEW_DATE_HISTORY, WORK_DESCRIPTION_HISTORY, DISPLAY_ORDER, STATUS_CHANGE_HISTORY
       , ONGOING_CHK, LOCK_AND_TAG_CHK, ATMOSPHERIC_SAFETY_WCF_CHK, ELEC_SYS_WORK_CTL_FORM_CHK
       , RADIATION_WORK_PERMIT_CHK, RADIATION_SAFETY_WCF_CHK, RADIATION_REMOVAL_SURVEY_CHK, UNIT
       , SAFETY_ISSUE_CHK, AM_APPROVAL_CHK, START_TIME, ADSO
       , MINIMUM_HOURS, TOCO_TIME, TOTAL_TIME, ISSUES
       , NUMBER_OF_PERSONS, PERSON_HOURS, MICRO_OTHER, RPFO_SURVEY_CHK
       , JOB_STATUS_CHK, JOB_NUMBER, JOB_UPDATED_DATE, JOB_COUNT
       , JOB_PRIORITY_FLAGS, EVENT_NUMBER, CHANNEL, NAME
       , DEVICE_COMMON_NAME, COMMENTS, SEARCH_CRITERIA, CHECKBOX_DATE_FLAGGED
       , ATTACHMENT_HISTORY, FEEDBACK_COMMENTS, FEEDBACK_PRIORITY_CHK, AM_APPROVAL_HISTORY
       , DATE_COMPLETED, HOP_CHK, OLD_CREATED_BY, OLD_MODIFIED_BY
       , ACCESS_REQUIREMENTS_CHK, TASK_PERSON_ID, AREA_MGR_ID, area_mgr_review_date, area_mgr_review_comments
       , SEQUENCE, TODAY_CHK, REQUIRES_BEAM_CHK, INVASIVE_CHK
       , TEST_TIME_NEEDED, INVASIVE_COMMENT, BEAM_COMMENT, TEST_PLAN
       , BACKOUT_PLAN, SYSTEMS_AFFECTED, DEPENDENCIES, GROUP_ID
       , SYSTEMS_REQUIRED, EMAIL_CHK, RISK_BENEFIT_DESCR, JOB_TYPE_CHK
       , PPS_INT_HAZ_CHK, SAFETY_FORM_DESCR, VISUAL_NUMBER, TASK_MANAGER
       ) VALUES (jn_operation, NVL(V('APP_USER'),USER), SYSDATE, NULL, NULL,
userenv('sessionid')
       , :OLD.JOB_ID, :OLD.AREA_ID, :OLD.SUBSYSTEM_ID
       , :OLD.PRIORITY_ID, :OLD.ACCESS_REQ_ID, :OLD.PPSZONE_ID, :OLD.WORK_TYPE_ID
       , :OLD.PROB_ID, :OLD.SHOP_ALT_ID, :OLD.DIV_CODE_ID, :OLD.SHOP_MAIN_ID
       , :OLD.BLDGMGR_ID, :OLD.ASST_BLDGMGR_ID, :OLD.BUILDING_ID, :OLD.UPDATEDBY_ID
       , :OLD.CREATED_BY, :OLD.CREATED_DATE, :OLD.MODIFIED_BY, :OLD.MODIFIED_DATE
       , :OLD.STATUS_CHK, :OLD.DESCRIPTION, :OLD.CATER_NUMBER, :OLD.JOB_HISTORY
       , :OLD.MICRO, :OLD.PRIMARY, :OLD.AGE, :OLD.REVIEW_COUNT
       , :OLD.WORK_TITLE_HISTORY, :OLD.LATEST_DATE, :OLD.REVIEW_DATE, :OLD.EOIC_PAGE
       , :OLD.REVIEW_DATE_HISTORY, :OLD.WORK_DESCRIPTION_HISTORY, :OLD.DISPLAY_ORDER, :OLD.STATUS_CHANGE_HISTORY
       , :OLD.ONGOING_CHK, :OLD.LOCK_AND_TAG_CHK, :OLD.ATMOSPHERIC_SAFETY_WCF_CHK, :OLD.ELEC_SYS_WORK_CTL_FORM_CHK
       , :OLD.RADIATION_WORK_PERMIT_CHK, :OLD.RADIATION_SAFETY_WCF_CHK, :OLD.RADIATION_REMOVAL_SURVEY_CHK, :OLD.UNIT
       , :OLD.SAFETY_ISSUE_CHK, :OLD.AM_APPROVAL_CHK, :OLD.START_TIME, :OLD.ADSO
       , :OLD.MINIMUM_HOURS, :OLD.TOCO_TIME, :OLD.TOTAL_TIME, :OLD.ISSUES
       , :OLD.NUMBER_OF_PERSONS, :OLD.PERSON_HOURS, :OLD.MICRO_OTHER, :OLD.RPFO_SURVEY_CHK
       , :OLD.JOB_STATUS_CHK, :OLD.JOB_NUMBER, :OLD.JOB_UPDATED_DATE, :OLD.JOB_COUNT
       , :OLD.JOB_PRIORITY_FLAGS, :OLD.EVENT_NUMBER, :OLD.CHANNEL, :OLD.NAME
       , :OLD.DEVICE_COMMON_NAME, :OLD.COMMENTS, :OLD.SEARCH_CRITERIA, :OLD.CHECKBOX_DATE_FLAGGED
       , :OLD.ATTACHMENT_HISTORY, :OLD.FEEDBACK_COMMENTS, :OLD.FEEDBACK_PRIORITY_CHK, :OLD.AM_APPROVAL_HISTORY
       , :OLD.DATE_COMPLETED, :OLD.HOP_CHK, :OLD.OLD_CREATED_BY, :OLD.OLD_MODIFIED_BY
       , :OLD.ACCESS_REQUIREMENTS_CHK, :OLD.TASK_PERSON_ID, :OLD.AREA_MGR_ID, :old.area_mgr_review_date, :old.area_mgr_review_comments
       , :OLD.SEQUENCE, :OLD.TODAY_CHK, :OLD.REQUIRES_BEAM_CHK, :OLD.INVASIVE_CHK
       , :OLD.TEST_TIME_NEEDED, :OLD.INVASIVE_COMMENT, :OLD.BEAM_COMMENT, :OLD.TEST_PLAN
       , :OLD.BACKOUT_PLAN, :OLD.SYSTEMS_AFFECTED, :OLD.DEPENDENCIES, :OLD.GROUP_ID
       , :OLD.SYSTEMS_REQUIRED, :OLD.EMAIL_CHK, :OLD.RISK_BENEFIT_DESCR, :OLD.JOB_TYPE_CHK
       , :OLD.PPS_INT_HAZ_CHK, :OLD.SAFETY_FORM_DESCR, :OLD.VISUAL_NUMBER, :OLD.TASK_MANAGER
       );
    END IF;
    END IF;
  END;


EXCEPTION
  WHEN PK_CHG_ERROR THEN
    PKG.PKG_ALLOW_SET_STATUS := 'Y';
    RAISE_APPLICATION_ERROR(-20100, V_ERRMSG);
  WHEN DEL_ERROR THEN
    PKG.PKG_ALLOW_SET_STATUS := 'Y';
    RAISE_APPLICATION_ERROR(-20110, V_ERRMSG);
  WHEN OTHERS THEN
    PKG.PKG_ALLOW_SET_STATUS := 'Y';
    V_ERRMSG := 'Prob_id=' || :new.prob_id || ' ' || SUBSTR('ERROR: '||V_PROC||': '||SQLERRM,1,300);
    V_ERRMSG := PKG.FORMAT_MSG(V_ERRMSG, V_HTML_FLAG);
    RAISE_APPLICATION_ERROR(-20120, V_ERRMSG);

END;
/