
  CREATE OR REPLACE  VIEW "LCLS_INFRASTRUCTURE"."MAGNET_POLYNOMIALS_CHANGES_VW" ("EVENT_DATE", "POLY_ID", "UPLOAD_ID", "CREATED_BY", "DATE_CREATED", "UPDATED_BY", "DATE_UPDATED", "OLD_BARCODE", "NEW_BARCODE", "POLYNOMIAL", "BARCODE", "SERIAL_NO", "DEVICE", "STATUS", "COEFF_COUNT", "ELEMENT", "PS_STRING", "PS_CONFIG", "MMG_URL", "IMIN_VAL", "IMAX_VAL", "BMIN_VAL", "BMAX_VAL", 
 "STDZDIRECT_VAL", "STDZCYCLENUM_VAL", "STDZIMIN_VAL", "STDZIMAX_VAL", "STDZIFINAL_VAL", "TRIMRAMPRATE_VAL", "TRIMSETL_VAL", "TRIMTYPE_VAL", 
  "COEFF_0_VAL", "COEFF_1_VAL", "COEFF_2_VAL", "COEFF_3_VAL", "COEFF_4_VAL", "COEFF_5_VAL", "COEFF_6_VAL", "COEFF_7_VAL", "COEFF_8_VAL", "COEFF_9_VAL", "COEFF_10_VAL", "COEFF_11_VAL", "COEFF_12_VAL", "PROGRAM_NAME","BEAMLINE") AS 
  SELECT EVENT_DATE,POLY_ID,UPLOAD_ID,CREATED_BY,DATE_CREATED,UPDATED_BY,DATE_UPDATED,OLD_BARCODE,NEW_BARCODE,POLYNOMIAL,BARCODE,SERIAL_NO,DEVICE,STATUS,COEFF_COUNT,ELEMENT,PS_STRING,PS_CONFIG,MMG_URL,IMIN_VAL,IMAX_VAL,BMIN_VAL,BMAX_VAL,
  STDZDIRECT_VAL,STDZCYCLENUM_VAL,STDZIMIN_VAL,STDZIMAX_VAL,STDZIFINAL_VAL,TRIMRAMPRATE_VAL,TRIMSETL_VAL,TRIMTYPE_VAL,
  COEFF_0_VAL,COEFF_1_VAL,COEFF_2_VAL,COEFF_3_VAL,COEFF_4_VAL,COEFF_5_VAL,COEFF_6_VAL,COEFF_7_VAL,COEFF_8_VAL,COEFF_9_VAL,COEFF_10_VAL,COEFF_11_VAL,COEFF_12_VAL,PROGRAM_NAME,BEAMLINE
FROM
(
SELECT
-------------
T.EVENT_DATE,
T.POLY_ID,
T.UPLOAD_ID,
T.CREATED_BY,
T.DATE_CREATED,
T.UPDATED_BY,
T.DATE_UPDATED,
T.OLD_BARCODE,
T.NEW_BARCODE,
T.POLYNOMIAL,
T.BARCODE,
T.SERIAL_NO,
T.DEVICE,
T.STATUS,
T.COEFF_COUNT,
T.ELEMENT,
T.PS_STRING,
T.PS_CONFIG,
T.MMG_URL,
T.IMIN_VAL,
T.IMAX_VAL,
T.BMIN_VAL,
T.BMAX_VAL,
T.STDZDIRECT_VAL,
T.STDZCYCLENUM_VAL,
T.STDZIMIN_VAL,
T.STDZIMAX_VAL,
T.STDZIFINAL_VAL,
T.TRIMRAMPRATE_VAL,
T.TRIMSETL_VAL,
T.TRIMTYPE_VAL,
T.COEFF_0_VAL,
T.COEFF_1_VAL,
T.COEFF_2_VAL,
T.COEFF_3_VAL,
T.COEFF_4_VAL,
T.COEFF_5_VAL,
T.COEFF_6_VAL,
T.COEFF_7_VAL,
T.COEFF_8_VAL,
T.COEFF_9_VAL,
T.COEFF_10_VAL,
T.COEFF_11_VAL,
T.COEFF_12_VAL,
T.PROGRAM_NAME,
T.BEAMLINE
FROM
(
SELECT
       X.JN_DATETIME AS EVENT_DATE,
       X.POLY_ID,
       X.UPLOAD_ID,
       X.CREATED_BY,
       X.DATE_CREATED,
       X.UPDATED_BY,
       X.DATE_UPDATED,
	X.OLD_BARCODE,
	X.NEW_BARCODE,
       ( CASE WHEN (X.OLD_POLYNOMIAL = X.NEW_POLYNOMIAL) THEN X.OLD_POLYNOMIAL
              ELSE X.OLD_POLYNOMIAL||' -> '||X.NEW_POLYNOMIAL 
         END
       ) AS POLYNOMIAL,
       (CASE WHEN (X.OLD_BARCODE = X.NEW_BARCODE) THEN X.OLD_BARCODE
                       ELSE X.OLD_BARCODE||' -> '||X.NEW_BARCODE 
        END
       ) AS BARCODE,
       (CASE WHEN (X.OLD_SERIAL_NO = X.NEW_SERIAL_NO) THEN X.OLD_SERIAL_NO
                       ELSE X.OLD_SERIAL_NO||' -> '||X.NEW_SERIAL_NO 
        END
       ) AS SERIAL_NO,
       (CASE WHEN (X.OLD_DEVICE = X.NEW_DEVICE) THEN X.OLD_DEVICE
                       ELSE X.OLD_DEVICE||' -> '||X.NEW_DEVICE 
        END
       ) AS DEVICE,
       (CASE WHEN (X.OLD_STATUS = X.NEW_STATUS) THEN X.OLD_STATUS
                       ELSE X.OLD_STATUS||' -> '||X.NEW_STATUS 
        END
       ) AS STATUS,
       (CASE WHEN (X.OLD_coeff_count = X.NEW_coeff_count) THEN X.OLD_coeff_count
                       ELSE X.OLD_coeff_count||' -> '||X.NEW_coeff_count 
        END
       ) AS coeff_count,
       (CASE WHEN (X.OLD_ELEMENT = X.NEW_ELEMENT) THEN X.OLD_ELEMENT
                       ELSE X.OLD_ELEMENT||' -> '||X.NEW_ELEMENT 
        END
       ) AS ELEMENT,
       (CASE WHEN (X.OLD_PS_STRING = X.NEW_PS_STRING) THEN X.OLD_PS_STRING
                       ELSE X.OLD_PS_STRING||' -> '||X.NEW_PS_STRING 
        END
       ) AS PS_STRING,
       (CASE WHEN (X.OLD_PS_CONFIG = X.NEW_PS_CONFIG) THEN X.OLD_PS_CONFIG
                       ELSE X.OLD_PS_CONFIG||' -> '||X.NEW_PS_CONFIG 
        END
       ) AS PS_CONFIG,
       (CASE WHEN (X.OLD_MMG_URL = X.NEW_MMG_URL) THEN X.OLD_MMG_URL
                       ELSE X.OLD_MMG_URL||' -> '||X.NEW_MMG_URL 
        END
       ) AS MMG_URL,
       (CASE WHEN (X.OLD_IMIN_VAL = X.NEW_IMIN_VAL) THEN X.OLD_IMIN_VAL
                       ELSE X.OLD_IMIN_VAL||' -> '||X.NEW_IMIN_VAL 
        END
       ) AS IMIN_VAL,
       (CASE WHEN (X.OLD_IMAX_VAL = X.NEW_IMAX_VAL) THEN X.OLD_IMAX_VAL
                       ELSE X.OLD_IMAX_VAL||' -> '||X.NEW_IMAX_VAL 
        END
       ) AS IMAX_VAL,
       (CASE WHEN (X.OLD_BMIN_VAL = X.NEW_BMIN_VAL) THEN X.OLD_BMIN_VAL
                       ELSE X.OLD_BMIN_VAL||' -> '||X.NEW_BMIN_VAL 
        END
       ) AS BMIN_VAL,
       (CASE WHEN (X.OLD_BMAX_VAL = X.NEW_BMAX_VAL) THEN X.OLD_BMAX_VAL
                       ELSE X.OLD_BMAX_VAL||' -> '||X.NEW_BMAX_VAL 
        END
       ) AS BMAX_VAL,
       (CASE WHEN (X.OLD_STDZDIRECT_VAL = X.NEW_STDZDIRECT_VAL) THEN X.OLD_STDZDIRECT_VAL
                       ELSE X.OLD_STDZDIRECT_VAL||' -> '||X.NEW_STDZDIRECT_VAL 
        END
       ) AS STDZDIRECT_VAL,
       (CASE WHEN (X.OLD_STDZCYCLENUM_VAL = X.NEW_STDZCYCLENUM_VAL) THEN X.OLD_STDZCYCLENUM_VAL
                       ELSE X.OLD_STDZCYCLENUM_VAL||' -> '||X.NEW_STDZCYCLENUM_VAL 
        END
       ) AS STDZCYCLENUM_VAL,
       (CASE WHEN (X.OLD_STDZIMIN_VAL = X.NEW_STDZIMIN_VAL) THEN X.OLD_STDZIMIN_VAL
                       ELSE X.OLD_STDZIMIN_VAL||' -> '||X.NEW_STDZIMIN_VAL 
        END
       ) AS STDZIMIN_VAL,
       (CASE WHEN (X.OLD_STDZIMAX_VAL = X.NEW_STDZIMAX_VAL) THEN X.OLD_STDZIMAX_VAL
                       ELSE X.OLD_STDZIMAX_VAL||' -> '||X.NEW_STDZIMAX_VAL 
                  END
       ) AS STDZIMAX_VAL,
       (CASE WHEN (X.OLD_STDZIFINAL_VAL = X.NEW_STDZIFINAL_VAL) THEN X.OLD_STDZIFINAL_VAL
                       ELSE X.OLD_STDZIFINAL_VAL||' -> '||X.NEW_STDZIFINAL_VAL 
        END
       ) AS STDZIFINAL_VAL,
       (CASE WHEN (X.OLD_TRIMRAMPRATE_VAL = X.NEW_TRIMRAMPRATE_VAL) THEN X.OLD_TRIMRAMPRATE_VAL
                       ELSE X.OLD_TRIMRAMPRATE_VAL||' -> '||X.NEW_TRIMRAMPRATE_VAL 
        END
       ) AS TRIMRAMPRATE_VAL,
       (CASE WHEN (X.OLD_TRIMSETL_VAL = X.NEW_TRIMSETL_VAL) THEN X.OLD_TRIMSETL_VAL
                       ELSE X.OLD_TRIMSETL_VAL||' -> '||X.NEW_TRIMSETL_VAL 
        END
       ) AS TRIMSETL_VAL,
       (CASE WHEN (X.OLD_TRIMTYPE_VAL = X.NEW_TRIMTYPE_VAL) THEN X.OLD_TRIMTYPE_VAL
                       ELSE X.OLD_TRIMTYPE_VAL||' -> '||X.NEW_TRIMTYPE_VAL 
        END
       ) AS TRIMTYPE_VAL,
       (CASE WHEN (X.OLD_COEFF_0_VAL = X.NEW_COEFF_0_VAL) THEN X.OLD_COEFF_0_VAL
                       ELSE X.OLD_COEFF_0_VAL||' -> '||X.NEW_COEFF_0_VAL 
        END
       ) AS COEFF_0_VAL,
       (CASE WHEN (X.OLD_COEFF_1_VAL = X.NEW_COEFF_1_VAL) THEN X.OLD_COEFF_1_VAL
                       ELSE X.OLD_COEFF_1_VAL||' -> '||X.NEW_COEFF_1_VAL 
        END
       ) AS COEFF_1_VAL,
       (CASE WHEN (X.OLD_COEFF_2_VAL = X.NEW_COEFF_2_VAL) THEN X.OLD_COEFF_2_VAL
                       ELSE X.OLD_COEFF_2_VAL||' -> '||X.NEW_COEFF_2_VAL 
        END
       ) AS COEFF_2_VAL,
       (CASE WHEN (X.OLD_COEFF_3_VAL = X.NEW_COEFF_3_VAL) THEN X.OLD_COEFF_3_VAL
                       ELSE X.OLD_COEFF_3_VAL||' -> '||X.NEW_COEFF_3_VAL 
        END
       ) AS COEFF_3_VAL,
       (CASE WHEN (X.OLD_COEFF_4_VAL = X.NEW_COEFF_4_VAL) THEN X.OLD_COEFF_4_VAL
                       ELSE X.OLD_COEFF_4_VAL||' -> '||X.NEW_COEFF_4_VAL 
        END
       ) AS COEFF_4_VAL,
       (CASE WHEN (X.OLD_COEFF_5_VAL = X.NEW_COEFF_5_VAL) THEN X.OLD_COEFF_5_VAL
                       ELSE X.OLD_COEFF_5_VAL||' -> '||X.NEW_COEFF_5_VAL 
        END
       ) AS COEFF_5_VAL,
       (CASE WHEN (X.OLD_COEFF_6_VAL = X.NEW_COEFF_6_VAL) THEN X.OLD_COEFF_6_VAL
                       ELSE X.OLD_COEFF_6_VAL||' -> '||X.NEW_COEFF_6_VAL 
        END
       ) AS COEFF_6_VAL,
       (CASE WHEN (X.OLD_COEFF_7_VAL = X.NEW_COEFF_7_VAL) THEN X.OLD_COEFF_7_VAL
                       ELSE X.OLD_COEFF_7_VAL||' -> '||X.NEW_COEFF_7_VAL 
        END
       ) AS COEFF_7_VAL,
       (CASE WHEN (X.OLD_COEFF_8_VAL = X.NEW_COEFF_8_VAL) THEN X.OLD_COEFF_8_VAL
                       ELSE X.OLD_COEFF_8_VAL||' -> '||X.NEW_COEFF_8_VAL 
        END
       ) AS COEFF_8_VAL,
       (CASE WHEN (X.OLD_COEFF_9_VAL = X.NEW_COEFF_9_VAL) THEN X.OLD_COEFF_9_VAL
                       ELSE X.OLD_COEFF_9_VAL||' -> '||X.NEW_COEFF_9_VAL 
        END
       ) AS COEFF_9_VAL,
       (CASE WHEN (X.OLD_COEFF_10_VAL = X.NEW_COEFF_10_VAL) THEN X.OLD_COEFF_10_VAL
                       ELSE X.OLD_COEFF_10_VAL||' -> '||X.NEW_COEFF_10_VAL 
        END
       ) AS COEFF_10_VAL,
       (CASE WHEN (X.OLD_COEFF_11_VAL = X.NEW_COEFF_11_VAL) THEN X.OLD_COEFF_11_VAL
                       ELSE X.OLD_COEFF_11_VAL||' -> '||X.NEW_COEFF_11_VAL 
        END
       ) AS COEFF_11_VAL,
       (CASE WHEN (X.OLD_COEFF_12_VAL = X.NEW_COEFF_12_VAL) THEN X.OLD_COEFF_12_VAL
                       ELSE X.OLD_COEFF_12_VAL||' -> '||X.NEW_COEFF_12_VAL 
        END
       ) AS COEFF_12_VAL,
       (CASE WHEN (X.OLD_PROGRAM_NAME = X.NEW_PROGRAM_NAME) THEN X.OLD_PROGRAM_NAME
                       ELSE X.OLD_PROGRAM_NAME||' -> '||X.NEW_PROGRAM_NAME
        END
       ) AS PROGRAM_NAME,
       (CASE WHEN (X.OLD_BEAMLINE = X.NEW_BEAMLINE) THEN X.OLD_BEAMLINE
                       ELSE X.OLD_BEAMLINE||' -> '||X.NEW_BEAMLINE
        END
       ) AS BEAMLINE
FROM
(
SELECT
LJ.JN_OPERATION,
LJ.JN_DATETIME,
LJ.POLY_ID,
LJ.UPLOAD_ID,
LJ.CREATED_BY,
LJ.date_created,
LJ.UPDATED_BY,
LJ.date_updated,
NVL(LJ.OLD_POLYNOMIAL,'Null') AS 	OLD_POLYNOMIAL,
NVL(LJ.NEW_POLYNOMIAL,'Null') AS 	NEW_POLYNOMIAL,
NVL(LJ.OLD_BARCODE,'Null') AS 	OLD_BARCODE,
NVL(LJ.NEW_BARCODE,'Null') AS 	NEW_BARCODE,
NVL(LJ.OLD_SERIAL_NO,'Null') AS 	OLD_SERIAL_NO,
NVL(LJ.NEW_SERIAL_NO,'Null') AS 	NEW_SERIAL_NO,
NVL(LJ.OLD_DEVICE,'Null') AS 	OLD_DEVICE,
NVL(LJ.NEW_DEVICE,'Null') AS 	NEW_DEVICE,
NVL(LJ.OLD_STATUS,'Null') AS 	OLD_STATUS,
NVL(LJ.NEW_STATUS,'Null') AS 	NEW_STATUS,
NVL(TO_CHAR(LJ.OLD_coeff_count),'Null') AS 	OLD_coeff_count,
NVL(TO_CHAR(LJ.NEW_coeff_count),'Null') AS 	NEW_coeff_count,
NVL(LJ.OLD_ELEMENT,'Null') AS 	OLD_ELEMENT,
NVL(LJ.NEW_ELEMENT,'Null') AS 	NEW_ELEMENT,
NVL(TO_CHAR(LJ.OLD_PS_STRING),'Null') AS 	OLD_PS_STRING,
NVL(TO_CHAR(LJ.NEW_PS_STRING),'Null') AS 	NEW_PS_STRING,
NVL(LJ.OLD_PS_CONFIG,'Null') AS 	OLD_PS_CONFIG,
NVL(LJ.NEW_PS_CONFIG,'Null') AS 	NEW_PS_CONFIG,
NVL(LJ.OLD_MMG_URL,'Null') AS 	OLD_MMG_URL,
NVL(LJ.NEW_MMG_URL,'Null') AS 	NEW_MMG_URL,
NVL(TO_CHAR(LJ.OLD_IMIN_VAL),'Null') AS 	OLD_IMIN_VAL,
NVL(TO_CHAR(LJ.NEW_IMIN_VAL),'Null') AS 	NEW_IMIN_VAL,
NVL(TO_CHAR(LJ.OLD_IMAX_VAL),'Null') AS 	OLD_IMAX_VAL,
NVL(TO_CHAR(LJ.NEW_IMAX_VAL),'Null') AS 	NEW_IMAX_VAL,
NVL(TO_CHAR(LJ.OLD_BMIN_VAL),'Null') AS 	OLD_BMIN_VAL,
NVL(TO_CHAR(LJ.NEW_BMIN_VAL),'Null') AS 	NEW_BMIN_VAL,
NVL(TO_CHAR(LJ.OLD_BMAX_VAL),'Null') AS 	OLD_BMAX_VAL,
NVL(TO_CHAR(LJ.NEW_BMAX_VAL),'Null') AS 	NEW_BMAX_VAL,
NVL(LJ.OLD_STDZDIRECT_VAL,'Null') AS 	OLD_STDZDIRECT_VAL,
NVL(LJ.NEW_STDZDIRECT_VAL,'Null') AS 	NEW_STDZDIRECT_VAL,
NVL(TO_CHAR(LJ.OLD_STDZCYCLENUM_VAL),'Null') AS 	OLD_STDZCYCLENUM_VAL,
NVL(TO_CHAR(LJ.NEW_STDZCYCLENUM_VAL),'Null') AS 	NEW_STDZCYCLENUM_VAL,
NVL(TO_CHAR(LJ.OLD_STDZIMIN_VAL),'Null') AS 	OLD_STDZIMIN_VAL,
NVL(TO_CHAR(LJ.NEW_STDZIMIN_VAL),'Null') AS 	NEW_STDZIMIN_VAL,
NVL(TO_CHAR(LJ.OLD_STDZIMAX_VAL),'Null') AS 	OLD_STDZIMAX_VAL,
NVL(TO_CHAR(LJ.NEW_STDZIMAX_VAL),'Null') AS 	NEW_STDZIMAX_VAL,
NVL(TO_CHAR(LJ.OLD_STDZIFINAL_VAL),'Null') AS 	OLD_STDZIFINAL_VAL,
NVL(TO_CHAR(LJ.NEW_STDZIFINAL_VAL),'Null') AS 	NEW_STDZIFINAL_VAL,
NVL(TO_CHAR(LJ.OLD_TRIMRAMPRATE_VAL),'Null') AS 	OLD_TRIMRAMPRATE_VAL,
NVL(TO_CHAR(LJ.NEW_TRIMRAMPRATE_VAL),'Null') AS 	NEW_TRIMRAMPRATE_VAL,
NVL(TO_CHAR(LJ.OLD_TRIMSETL_VAL),'Null') AS 	OLD_TRIMSETL_VAL,
NVL(TO_CHAR(LJ.NEW_TRIMSETL_VAL),'Null') AS 	NEW_TRIMSETL_VAL,
NVL(LJ.OLD_TRIMTYPE_VAL,'Null') AS 	OLD_TRIMTYPE_VAL,
NVL(LJ.NEW_TRIMTYPE_VAL,'Null') AS 	NEW_TRIMTYPE_VAL,
NVL(TO_CHAR(LJ.OLD_COEFF_0_VAL),'Null') AS 	OLD_COEFF_0_VAL,
NVL(TO_CHAR(LJ.NEW_COEFF_0_VAL),'Null') AS 	NEW_COEFF_0_VAL,
NVL(TO_CHAR(LJ.OLD_COEFF_1_VAL),'Null') AS 	OLD_COEFF_1_VAL,
NVL(TO_CHAR(LJ.NEW_COEFF_1_VAL),'Null') AS 	NEW_COEFF_1_VAL,
NVL(TO_CHAR(LJ.OLD_COEFF_2_VAL),'Null') AS 	OLD_COEFF_2_VAL,
NVL(TO_CHAR(LJ.NEW_COEFF_2_VAL),'Null') AS 	NEW_COEFF_2_VAL,
NVL(TO_CHAR(LJ.OLD_COEFF_3_VAL),'Null') AS 	OLD_COEFF_3_VAL,
NVL(TO_CHAR(LJ.NEW_COEFF_3_VAL),'Null') AS 	NEW_COEFF_3_VAL,
NVL(TO_CHAR(LJ.OLD_COEFF_4_VAL),'Null') AS 	OLD_COEFF_4_VAL,
NVL(TO_CHAR(LJ.NEW_COEFF_4_VAL),'Null') AS 	NEW_COEFF_4_VAL,
NVL(TO_CHAR(LJ.OLD_COEFF_5_VAL),'Null') AS 	OLD_COEFF_5_VAL,
NVL(TO_CHAR(LJ.NEW_COEFF_5_VAL),'Null') AS 	NEW_COEFF_5_VAL,
NVL(TO_CHAR(LJ.OLD_COEFF_6_VAL),'Null') AS 	OLD_COEFF_6_VAL,
NVL(TO_CHAR(LJ.NEW_COEFF_6_VAL),'Null') AS 	NEW_COEFF_6_VAL,
NVL(TO_CHAR(LJ.OLD_COEFF_7_VAL),'Null') AS 	OLD_COEFF_7_VAL,
NVL(TO_CHAR(LJ.NEW_COEFF_7_VAL),'Null') AS 	NEW_COEFF_7_VAL,
NVL(TO_CHAR(LJ.OLD_COEFF_8_VAL),'Null') AS 	OLD_COEFF_8_VAL,
NVL(TO_CHAR(LJ.NEW_COEFF_8_VAL),'Null') AS 	NEW_COEFF_8_VAL,
NVL(TO_CHAR(LJ.OLD_COEFF_9_VAL),'Null') AS 	OLD_COEFF_9_VAL,
NVL(TO_CHAR(LJ.NEW_COEFF_9_VAL),'Null') AS 	NEW_COEFF_9_VAL,
NVL(TO_CHAR(LJ.OLD_COEFF_10_VAL),'Null') AS 	OLD_COEFF_10_VAL,
NVL(TO_CHAR(LJ.NEW_COEFF_10_VAL),'Null') AS 	NEW_COEFF_10_VAL,
NVL(TO_CHAR(LJ.OLD_COEFF_11_VAL),'Null') AS 	OLD_COEFF_11_VAL,
NVL(TO_CHAR(LJ.NEW_COEFF_11_VAL),'Null') AS 	NEW_COEFF_11_VAL,
NVL(TO_CHAR(LJ.OLD_COEFF_12_VAL),'Null') AS 	OLD_COEFF_12_VAL,
NVL(TO_CHAR(LJ.NEW_COEFF_12_VAL),'Null') AS 	NEW_COEFF_12_VAL,
(SELECT NVL(B.PROGRAM_NAME,'Null') FROM SLAC_PROGRAMS B WHERE B.PROGRAM_ID = NVL(LJ.OLD_PROGRAM_ID,0)) AS OLD_PROGRAM_NAME,
(SELECT NVL(B.PROGRAM_NAME,'Null') FROM SLAC_PROGRAMS B WHERE B.PROGRAM_ID = NVL(LJ.NEW_PROGRAM_ID,0)) AS NEW_PROGRAM_NAME,
(SELECT NVL(B.DESCRIPTION,'Null') FROM BEAMLINES B WHERE B.ID = NVL(LJ.OLD_BEAMLINE_ID,0)) AS OLD_BEAMLINE,
(SELECT NVL(B.DESCRIPTION,'Null') FROM BEAMLINES B WHERE B.ID = NVL(LJ.NEW_BEAMLINE_ID,0)) AS NEW_BEAMLINE
FROM
MAGNET_POLYNOMIAL_JN LJ
where JN_OPERATION = 'UPD'
) X
) T
) Z;
