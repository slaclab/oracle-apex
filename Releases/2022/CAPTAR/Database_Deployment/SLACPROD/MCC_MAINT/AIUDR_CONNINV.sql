-- after trigger on CONNINV
create or replace TRIGGER AIUDR_CONNINV
AFTER INSERT OR UPDATE OR DELETE ON CONNINV
FOR EACH ROW
DECLARE
  jn_operation VARCHAR2(3);
  V_USER            VARCHAR2(100) := NVL(V('APP_USER'),USER);
  V_ERRMSG       VARCHAR2(1000);
  C_PROC    CONSTANT   VARCHAR2(30) := 'AIUDR_CONNINV';
BEGIN

  V_ERRMSG := NULL;
--
    IF INSERTING THEN
       jn_operation := 'INS';
    ELSIF UPDATING THEN
       jn_operation := 'UPD';
    ELSIF DELETING THEN
       jn_operation := 'DEL';
    END IF;
--
    IF INSERTING THEN
       INSERT INTO CONNINV_JN
       (JN_OPERATION,
	JN_ORACLE_USER,
	JN_DATETIME,
	JN_NOTES,
	JN_APPLN,
	JN_SESSION,
	OLD_LOC,
	NEW_LOC,
	OLD_RACK,
	NEW_RACK,
	OLD_SIDE,
	NEW_SIDE,
	OLD_ELE,
	NEW_ELE,
	OLD_SLOT,
	NEW_SLOT,
	OLD_CONNNUM,
	NEW_CONNNUM,
	OLD_PINLIST,
	NEW_PINLIST,
	OLD_CABLENUM,
	NEW_CABLENUM,
	OLD_CONNTYPE,
	NEW_CONNTYPE,
	OLD_STATION,
	NEW_STATION,
	OLD_INSTR,
	NEW_INSTR,
	OLD_STATION_OLD,
	NEW_STATION_OLD,
	CONNINV_ID,
	CREATED_BY,
	CREATED_DATE,
	MODIFIED_BY,
	MODIFIED_DATE,
	OLD_ORIGIN,
	NEW_ORIGIN
	)
       VALUES
       (jn_operation,
        NVL(V('APP_USER'),USER),
	SYSDATE,
	NULL,
	NULL,
	userenv('sessionid'),
	NULL,
	:NEW.LOC,
	NULL,
	:NEW.RACK,
	NULL,
	:NEW.SIDE,
	NULL,
	:NEW.ELE,
	NULL,
	:NEW.SLOT,
	NULL,
	:NEW.CONNNUM,
	NULL,
	:NEW.PINLIST,
	NULL,
	:NEW.CABLENUM,
	NULL,
	:NEW.CONNTYPE,
	NULL,
	:NEW.STATION,
	NULL,
	:NEW.INSTR,
	NULL,
	:NEW.STATION_OLD,
	:NEW.CONNINV_ID,
        :NEW.CREATED_BY,
	:NEW.CREATED_DATE,
	NULL,
	NULL,
	NULL,
	:NEW.ORIGIN
        );
    ELSIF UPDATING THEN
       INSERT INTO CONNINV_JN
       (JN_OPERATION,
	JN_ORACLE_USER,
	JN_DATETIME,
	JN_NOTES,
	JN_APPLN,
	JN_SESSION,
	OLD_LOC,
	NEW_LOC,
	OLD_RACK,
	NEW_RACK,
	OLD_SIDE,
	NEW_SIDE,
	OLD_ELE,
	NEW_ELE,
	OLD_SLOT,
	NEW_SLOT,
	OLD_CONNNUM,
	NEW_CONNNUM,
	OLD_PINLIST,
	NEW_PINLIST,
	OLD_CABLENUM,
	NEW_CABLENUM,
	OLD_CONNTYPE,
	NEW_CONNTYPE,
	OLD_STATION,
	NEW_STATION,
	OLD_INSTR,
	NEW_INSTR,
	OLD_STATION_OLD,
	NEW_STATION_OLD,
	CONNINV_ID,
	CREATED_BY,
	CREATED_DATE,
	MODIFIED_BY,
	MODIFIED_DATE,
	OLD_ORIGIN,
	NEW_ORIGIN
	)
       VALUES
       (jn_operation,
        NVL(V('APP_USER'),USER),
	SYSDATE,
	NULL,
	NULL,
	userenv('sessionid'),
	:OLD.LOC,
	:NEW.LOC,
	:OLD.RACK,
	:NEW.RACK,
	:OLD.SIDE,
	:NEW.SIDE,
	:OLD.ELE,
	:NEW.ELE,
	:OLD.SLOT,
	:NEW.SLOT,
	:OLD.CONNNUM,
	:NEW.CONNNUM,
	:OLD.PINLIST,
	:NEW.PINLIST,
	:OLD.CABLENUM,
	:NEW.CABLENUM,
	:OLD.CONNTYPE,
	:NEW.CONNTYPE,
	:OLD.STATION,
	:NEW.STATION,
	:OLD.INSTR,
	:NEW.INSTR,
	:OLD.STATION_OLD,
	:NEW.STATION_OLD,
	:NEW.CONNINV_ID,
        :OLD.CREATED_BY,
	:OLD.CREATED_DATE,
	:NEW.MODIFIED_BY,
	:NEW.MODIFIED_DATE,
	:OLD.ORIGIN,
	:NEW.ORIGIN
        );

    ELSIF DELETING THEN
       INSERT INTO CONNINV_JN
       (JN_OPERATION,
	JN_ORACLE_USER,
	JN_DATETIME,
	JN_NOTES,
	JN_APPLN,
	JN_SESSION,
	OLD_LOC,
	NEW_LOC,
	OLD_RACK,
	NEW_RACK,
	OLD_SIDE,
	NEW_SIDE,
	OLD_ELE,
	NEW_ELE,
	OLD_SLOT,
	NEW_SLOT,
	OLD_CONNNUM,
	NEW_CONNNUM,
	OLD_PINLIST,
	NEW_PINLIST,
	OLD_CABLENUM,
	NEW_CABLENUM,
	OLD_CONNTYPE,
	NEW_CONNTYPE,
	OLD_STATION,
	NEW_STATION,
	OLD_INSTR,
	NEW_INSTR,
	OLD_STATION_OLD,
	NEW_STATION_OLD,
	CONNINV_ID,
	CREATED_BY,
	CREATED_DATE,
	MODIFIED_BY,
	MODIFIED_DATE,
	OLD_ORIGIN,
	NEW_ORIGIN
	)
       VALUES
       (jn_operation,
        NVL(V('APP_USER'),USER),
	SYSDATE,
	NULL,
	NULL,
	userenv('sessionid'),
	:OLD.LOC,
	NULL,
	:OLD.RACK,
	NULL,
	:OLD.SIDE,
	NULL,
	:OLD.ELE,
	NULL,
	:OLD.SLOT,
	NULL,
	:OLD.CONNNUM,
	NULL,
	:OLD.PINLIST,
	NULL,
	:OLD.CABLENUM,
	NULL,
	:OLD.CONNTYPE,
	NULL,
	:OLD.STATION,
	NULL,
	:OLD.INSTR,
	NULL,
	:OLD.STATION_OLD,
	NULL,
	:OLD.CONNINV_ID,
        :OLD.CREATED_BY,
	:OLD.CREATED_DATE,
	:OLD.MODIFIED_BY,
	:OLD.MODIFIED_DATE,
	:OLD.ORIGIN,
	NULL
        );
    END IF;

EXCEPTION
  WHEN OTHERS THEN
    V_ERRMSG := SUBSTR('ERROR ('||C_PROC||')=>'||SQLERRM,1,1000);
    RAISE_APPLICATION_ERROR(-20010, V_ERRMSG);

END;
/